import{t as C,v as S,b as V,c as H}from"./index-Bx_F_XeT.js";import{w as b,T as E,N,C as L,E as M,g as P,i as k,V as O}from"./example-BGfpFHRI.js";import{p as R}from"./papaparse.min-B77FzdJ_.js";const B=b.auxiliaries.log,U=b.auxiliaries.LogLevel;class F{}const y=class y{static initializeHeader(t){t.csv_delimiter=";",t.id_column="ids",t.parent_column="parents"}static parseHeader(t,e){for(;t.length>=1&&t[0].startsWith("#");){const i=t.shift().substring(1).trim(),[u,c]=i.split("/"),[a,s]=u.split("=").map(d=>d.trim());a=="delimiter"?e.csv_delimiter=s||";":a=="ids"?e.id_column=s||"ids":a=="parents"?e.parent_column=s||"parents":a=="weights"?e.weight_column=s||"":a=="heights"?e.height_column=s||"":a=="colors"?(e.color_column=s||"",c&&(e.color_parameters=new Map(c.split(";").map(d=>d.split("="))))):a=="labels"?e.label_column=s||"":B(U.Warning,"Unparsed header",a,"=",s)}}static parsePapaparseResult(t,e,i){const u=(n,o)=>{if(n.meta.fields.indexOf(o)<0)return new Uint32Array(n.data.length);const h=n.data.map(m=>m[o]?m[o]:0);return Uint32Array.from(h)},c=(n,o)=>{if(n.meta.fields.indexOf(o)<0)return new Float32Array(n.data.length);let h=1;const m=new Map,A=()=>{var p;let w=!1;return(p=e.color_parameters)==null||p.forEach((T,J,j)=>{T&&(w=!0)}),w},I=n.data.map(w=>{let p=w[o]?w[o]:-1;if(isNaN(p)){if(e.color_parameters===void 0)return m.has(p)||m.set(p,h++),m.get(p);if(A())return e.color_parameters.get(p)?e.color_parameters.get(p):0}return p});return Float32Array.from([0].concat(I))},a=n=>t.meta.fields.indexOf(n)>=0,s=(n,o)=>n.meta.fields.indexOf(o)<0?new Array(n.data.length):n.data.map(m=>m[o]?m[o]:""),d=u(t,e.id_column),f=u(t,e.parent_column),x=c(t,e.weight_column),g=c(t,e.height_column),l=c(t,e.color_column),v=s(t,e.label_column),r=new Array;for(let n=0;n<d.length;n++){const o=d[n],h=f[n];r.push(h),r.push(o)}if(i.topology={edges:r,semantics:E.InputSemantics.ParentIdId,format:E.InputFormat.Interleaved},i.buffers=[{identifier:"source-weights",type:"numbers",data:x,linearization:"topology"},{identifier:"source-heights",type:"numbers",data:g,linearization:"topology"},{identifier:"source-colors",type:"numbers",data:l,linearization:"topology"}],i.bufferViews=[{identifier:"weights",source:"buffer:source-weights",transformations:[{type:"fill-invalid",value:0,invalidValue:-1},{type:"propagate-up",operation:"sum"}]},{identifier:"heights-normalized",source:"buffer:source-heights",transformations:[{type:"fill-invalid",value:0,invalidValue:-1},{type:"normalize",operation:"zero-to-max"}]},{identifier:"colors-normalized",source:"buffer:source-colors",transformations:[{type:"fill-invalid",value:0,invalidValue:-1},{type:"normalize",operation:"zero-to-max"}]}],a(e.label_column)){const n=new Map;for(let o=0;o<v.length;++o)n.set(d[o],v[o]);i.labels={innerNodeLayerRange:[1,2],numTopInnerNodes:50,numTopWeightNodes:50,numTopHeightNodes:50,numTopColorNodes:50,names:n}}i.colors=[{identifier:"emphasis",colorspace:"hex",value:"#00b0ff"},{identifier:"auxiliary",colorspace:"hex",values:["#00aa5e","#71237c"]},{identifier:"inner",colorspace:"hex",values:["#e8eaee","#eef0f4"]},{identifier:"leaf",preset:"Set1",steps:6}],i.layout={algorithm:"snake",weight:"bufferView:weights",sort:{key:"bufferView:weights",algorithm:N.Algorithm.Keep},parentPadding:{type:"relative",value:.05},siblingMargin:{type:"relative",value:.05},accessoryPadding:{type:"absolute",direction:"bottom",value:[0,.02,.01,0],relativeAreaThreshold:.4,targetAspectRatio:8}},i.geometry={parentLayer:{showRoot:!1},leafLayer:{colorMap:"color:leaf",height:"bufferView:heights-normalized",colors:"bufferView:colors-normalized"},emphasis:{outline:new Array,highlight:new Array},heightScale:.5},i.altered.alter("any")}static loadAsync(t){const e=new F;y.initializeHeader(e);const i=t.split(`
`);y.parseHeader(i,e);const u=i.join(`
`);return this.loadAsyncHeader(u,e)}static loadAsyncHeader(t,e){return new Promise((i,u)=>{const c=new L;R.parse(t,{error:a=>u(a),complete:a=>{y.parsePapaparseResult(a,e,c),i(c)},delimiter:e.csv_delimiter,quoteChar:'"',escapeChar:'"',header:!0,comments:"#",skipEmptyLines:!0})})}};y.FAILED=(t,e)=>`fetching '${t}' failed (${e.status}): ${e.statusText}`;let z=y;const $=b.auxiliaries.log,q=b.auxiliaries.LogLevel;class W extends M{obtainUrl(t){return window.location.origin+window.location.pathname+"?data="+t}get canvas(){return this._canvas}get visualization(){return this._visualization}get renderer(){return this._renderer}validate(t){return this.initialize(t)}preview(t){return this.initialize(t)}feature(t){const e=window.document.getElementById("csv-data"),i=window.document.getElementById("data-hash"),u=window.document.getElementById("reload"),c=window.document.getElementById("config-display"),a=this.initialize(t),s=this._visualization.renderer,d=this._canvas,f=this._visualization,x=g=>{const l=f.configuration;try{f.configuration=g,f.update(),s.invalidate(),c&&(c.textContent=JSON.stringify(g.toJSON(),null,2))}catch(v){if(console.log(v),l===void 0)return;const r=new L;r.topology=l.topology,r.layout=l.layout,r.buffers=l.buffers,r.bufferViews=l.bufferViews,r.colors=l.colors,r.geometry=l.geometry,r.labels=l.labels,f.configuration=r,f.update(),s.invalidate()}};if(window.gloperate=P,window.canvas=d,window.context=d.context,window.controller=d.controller,window.visualization=f,window.renderer=s,e){const l=new URLSearchParams(window.location.search).get("data");l&&($(q.Debug,"Load from",l),e.value=atob(l)),e.oninput=v=>{const r=e.value;z.loadAsync(r).then(n=>{x(n),i&&(i.textContent=this.obtainUrl(btoa(r)))})},e.oninput({})}return u&&i&&(u.onclick=g=>{i.textContent&&i.textContent!==""&&(window.location.href=i.textContent)}),a&&e!==void 0&&e!==null}initialize(t){this._canvas=k(t),this._visualization=new O;const e=this._visualization.renderer;return this._canvas.renderer=e,super.expose(),!0}uninitialize(){this._canvas.dispose(),this._renderer.uninitialize()}}window.onload=function(){const _=document.getElementById("canvas"),t=new W;window.example=t,t.feature(_);const e=window.document.getElementById("context-about");e&&(e.innerText=context.aboutString())};window.treemaprenderer=C;document.title="treemap-renderer";document.querySelector("#version").innerHTML=S();document.querySelector("#branch").innerHTML=V();document.querySelector("#commit").innerHTML=H();document.querySelector("#cryear").innerHTML=new Date().getFullYear();
