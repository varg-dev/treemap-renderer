import{t as N,v as P,b as V,c as S}from"./index-jvxPgqd9.js";import{w as x,T as C,N as B,C as H,E as M,g as O,i as R,V as k}from"./example-D6mntx4T.js";import{p as F}from"./papaparse.min-lL-0_K96.js";const I=x.auxiliaries.log,A=x.auxiliaries.LogLevel;class K{}const v=class v{static initializeHeader(t){t.csv_delimiter=";",t.groupings=[]}static parseHeader(t,e){for(;t.length>=1&&t[0].startsWith("#");){const n=t.shift().substring(1).trim(),[r,l]=n.split("=").map(d=>d.trim());r=="delimiter"?e.csv_delimiter=l||";":r=="groupings"?e.groupings=(l||"").split("/"):r=="weights"?e.weight_column=l||"":r=="heights"?e.height_column=l||"":r=="colors"?e.color_column=l||"":r=="labels"?e.label_column=l||"":I(A.Warning,"Unparsed header",r,"=",l)}}static parsePapaparseResult(t,e,n){const r=(o,a)=>o.meta.fields.indexOf(a)<0?new Array(o.data.length):o.data.map(c=>c[a]?parseFloat(c[a]):-1),l=o=>t.meta.fields.indexOf(o)>=0,d=(o,a)=>o.meta.fields.indexOf(a)<0?new Array(o.data.length):o.data.map(c=>c[a]?c[a]:""),b=r(t,e.weight_column),h=r(t,e.height_column),m=r(t,e.color_column),z=d(t,e.label_column),_=(o,a)=>({parentIndex:a,index:o}),p=(o,a,g)=>{const c=["",""];for(let f=0;f<a;++f)c[f+1]=g[o[f]]||"-";return c.join("/")},s=new Array,w=new Map,i={};let u=-1;i["/"]=_(u,-1),u+=1;const y=e.groupings;y.forEach((o,a)=>{t.data.forEach(g=>{const c=p(y,a,g),f=p(y,a+1,g);if(!(c in i)){I(A.Warning,c,"not in",i);return}f in i||(i[f]=_(u,i[c].index),s.push(i[f].parentIndex),s.push(u),w.set(u,g[y[a]]),u+=1)})});const E=u+1;if(t.data.forEach(o=>{const a=p(y,y.length,o);if(!(a in i)){I(A.Warning,a,"not in",i);return}s.push(i[a].index),s.push(u),u+=1}),n.topology={edges:s,semantics:C.InputSemantics.ParentIdId,format:C.InputFormat.Interleaved},n.buffers=[{identifier:"source-weights",type:"numbers",data:new Array(E).fill(0).concat(b),linearization:"topology"},{identifier:"source-heights",type:"numbers",data:new Array(E).fill(0).concat(h),linearization:"topology"},{identifier:"source-colors",type:"numbers",data:new Array(E).fill(0).concat(m),linearization:"topology"}],n.bufferViews=[{identifier:"weights",source:"buffer:source-weights",transformations:[{type:"fill-invalid",value:0,invalidValue:-1},{type:"propagate-up",operation:"sum"}]},{identifier:"heights-normalized",source:"buffer:source-heights",transformations:[{type:"fill-invalid",value:0,invalidValue:-1},{type:"normalize",operation:"zero-to-max"}]},{identifier:"colors-normalized",source:"buffer:source-colors",transformations:[{type:"fill-invalid",value:0,invalidValue:-1},{type:"normalize",operation:"zero-to-max"}]}],n.colors=[{identifier:"emphasis",colorspace:"hex",value:"#00b0ff"},{identifier:"auxiliary",colorspace:"hex",values:["#00aa5e","#71237c"]},{identifier:"inner",colorspace:"hex",values:["#e8eaee","#eef0f4"]},{identifier:"leaf",preset:"inferno",steps:7}],n.layout={algorithm:"snake",weight:"bufferView:weights",sort:{key:"bufferView:weights",algorithm:B.Algorithm.Keep},parentPadding:{type:"relative",value:.05},siblingMargin:{type:"relative",value:.05},accessoryPadding:{type:"absolute",direction:"bottom",value:[0,.02,.01,0],relativeAreaThreshold:.4,targetAspectRatio:8}},n.geometry={parentLayer:{showRoot:!1},leafLayer:{colorMap:"color:leaf",height:"bufferView:heights-normalized",colors:"bufferView:colors-normalized"},emphasis:{outline:new Array,highlight:new Array},heightScale:.5},l(e.label_column))for(let o=0;o<z.length;++o)w.set(o+E-1,z[o]);n.labels={innerNodeLayerRange:[0,2],numTopInnerNodes:50,numTopWeightNodes:50,numTopHeightNodes:50,numTopColorNodes:50,names:w},n.altered.alter("any")}static loadAsync(t){const e=new K;v.initializeHeader(e);const n=t.split(`
`);v.parseHeader(n,e);const r=n.join(`
`);return this.loadAsyncHeader(r,e)}static loadAsyncHeader(t,e){return new Promise((n,r)=>{const l=new H;F.parse(t,{error:d=>r(d),complete:d=>{v.parsePapaparseResult(d,e,l),n(l)},delimiter:e.csv_delimiter,quoteChar:'"',escapeChar:'"',header:!0,comments:"#",skipEmptyLines:!0})})}};v.FAILED=(t,e)=>`fetching '${t}' failed (${e.status}): ${e.statusText}`;let T=v;const W=x.auxiliaries.log,$=x.auxiliaries.LogLevel;class q extends M{obtainUrl(t){return window.location.origin+window.location.pathname+"?data="+t}get canvas(){return this._canvas}get visualization(){return this._visualization}get renderer(){return this._renderer}validate(t){return this.initialize(t)}preview(t){return this.initialize(t)}feature(t){const e=window.document.getElementById("csv-data"),n=window.document.getElementById("data-hash"),r=window.document.getElementById("reload"),l=window.document.getElementById("config-display"),d=this.initialize(t),b=this._visualization.renderer,h=this._canvas,m=this._visualization,z=h.element;window.document.getElementById("fullscreen").onclick=()=>{x.viewer.Fullscreen.toggle(z)};const _=p=>{const s=m.configuration;try{m.configuration=p,m.update(),b.invalidate(),l&&(l.textContent=JSON.stringify(p.toJSON(),null,2))}catch(w){if(console.log(w),s===void 0)return;const i=new H;i.topology=s.topology,i.layout=s.layout,i.buffers=s.buffers,i.bufferViews=s.bufferViews,i.colors=s.colors,i.geometry=s.geometry,i.labels=s.labels,m.configuration=i,m.update(),b.invalidate()}};if(window.gloperate=O,window.canvas=h,window.context=h.context,window.controller=h.controller,window.visualization=m,window.renderer=b,e){const s=new URLSearchParams(window.location.search).get("data");s&&(W($.Debug,"Load from",s),e.value=atob(s)),e.oninput=w=>{const i=e.value;T.loadAsync(i).then(u=>{_(u),n&&(n.textContent=this.obtainUrl(btoa(i)))})},e.oninput({})}return r&&n&&(r.onclick=p=>{n.textContent&&n.textContent!==""&&(window.location.href=n.textContent)}),d&&e!==void 0&&e!==null}initialize(t){this._canvas=R(t),this._visualization=new k;const e=this._visualization.renderer;return this._canvas.renderer=e,super.expose(),!0}uninitialize(){this._canvas.dispose(),this._renderer.uninitialize()}}window.onload=function(){const L=document.getElementById("canvas"),t=new q;window.example=t,t.feature(L);const e=window.document.getElementById("context-about");e&&(e.innerText=context.aboutString())};window.treemaprenderer=N;document.title="treemap-renderer";document.querySelector("#version").innerHTML=P();document.querySelector("#branch").innerHTML=V();document.querySelector("#commit").innerHTML=S();document.querySelector("#cryear").innerHTML=new Date().getFullYear();
